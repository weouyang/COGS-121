{
  "name": "passport-facebook-canvas",
  "version": "0.0.3",
  "description": "Facebook canvas authentication strategy for Passport.",
  "keywords": [
    "passport",
    "facebook",
    "canvas",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/missinglink/passport-facebook-canvas.git"
  },
  "bugs": {
    "url": "http://github.com/missinglink/passport-facebook-canvas/issues"
  },
  "author": {
    "name": "Peter Johnson",
    "email": "@insertcoffee",
    "url": "https://github.com/missinglink/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "dependencies": {
    "passport-facebook": "1.x.x",
    "facebook-signed-request": "0.0.2"
  },
  "devDependencies": {
    "mocha": "1.x.x",
    "chai": "1.x.x",
    "chai-passport-strategy": "0.1.x"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "mocha --reporter spec --require test/bootstrap/node test/*.test.js"
  },
  "readme": "Passport Strategy for Facebook Canvas apps\n---\n\nUse this strategy to log users in to your Facebook Canvas app automatically.\n\n**Note:** This strategy simply augments [passport-facebook](https://github.com/jaredhanson/passport-facebook), if you don't need Facebook Canvas support you should use that module instead.\n\n```bash\nnpm install passport-facebook-canvas --save\n```\n\n[![NPM](https://nodei.co/npm/passport-facebook-canvas.png?downloads=true&stars=true)](https://nodei.co/npm/passport-facebook-canvas/)\n\n### App Settings\n\n![Facebook Settings](http://s16.postimg.org/8jqaisnpx/app_settings2.png)\n\n### Configuring Secure Canvas Url\n\nFacebook has deprecated `Canvas Url` in favour of `Secure Canvas Url` and so requires setting up an SSL cert. You can produce a `self-signed certificate` with a command such as this: (don't set a password for a testing cert)\n```bash\n# Ubuntu\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout self_signed_ssl.key -out self_signed_ssl.crt\n```\n\nThen you must tell `express` to listen on another port, something like this:\n```javascript\nvar certificate = {\n  key: fs.readFileSync(path.resolve(__dirname, './self_signed_ssl.key'), 'utf8'),\n  cert: fs.readFileSync(path.resolve(__dirname, './self_signed_ssl.crt'), 'utf8')\n}\n\nhttp.createServer(app).listen(3000);\nhttps.createServer(certificate, app).listen(3001);\n```\n\n### Configure Strategy\n\nConfiguration is exactly the same as with [passport-facebook](https://github.com/jaredhanson/passport-facebook) except the module name is `'passport-facebook-canvas'` instead of `'passport-facebook'`.\n\n```javascript\nvar FacebookStrategy = require('passport-facebook-canvas');\n\npassport.use(new FacebookStrategy({\n    clientID: FACEBOOK_APP_ID,\n    clientSecret: FACEBOOK_APP_SECRET,\n    callbackURL: \"http://localhost:3000/auth/facebook/callback\"\n  },\n  function(accessToken, refreshToken, profile, done) {\n    User.findOrCreate({ facebookId: profile.id }, function (err, user) {\n      return done(err, user);\n    });\n  }\n));\n```\n\n### Authentication Routes\n\nConfiguration is exactly the same as with [passport-facebook](https://github.com/jaredhanson/passport-facebook) except the strategy name is `'facebook-canvas'` instead of `'facebook'`.\n\n```javascript\napp.get('/auth/facebook', passport.authenticate('facebook-canvas'));\n\napp.get('/auth/facebook/callback', \n  passport.authenticate('facebook-canvas', { successRedirect: '/',\n                                             failureRedirect: '/error' }));\n```\n\n### Canvas Route\n\nThis is the `Secure Canvas Url` route that Facebook will POST data to.\n\n**Note** If this is the first time the app has seen this user then redirect to `failureRedirect`.\n\n```javascript\napp.post('/auth/facebook/canvas', \n  passport.authenticate('facebook-canvas', { successRedirect: '/',\n                                             failureRedirect: '/auth/facebook/canvas/autologin' }));\n```\n\n### Auto Login Route\n\nWe cannot forward the user to another URL via HTTP redirect so we have to use a client-side js **hack** instead.\n\n```javascript\napp.get('/auth/facebook/canvas/autologin', function( req, res ){\n  res.send( '<!DOCTYPE html>' +\n              '<body>' +\n                '<script type=\"text/javascript\">' +\n                  'top.location.href = \"/auth/facebook\";' +\n                '</script>' +\n              '</body>' +\n            '</html>' );\n});\n```\nPlease suggest a better solution: https://developers.facebook.com/docs/appsonfacebook/tutorial/#canvas\n\n### Done\n\nNow you should be able to navigate to your app page: https://apps.facebook.com/myapp/ and be prompted to approve the app. On subsequent visits you should be logged in automatically.\n\n### License\n\n(The MIT License)\n\nCopyright (c) 2013 Peter Johnson &lt;@insertcoffee&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "passport-facebook-canvas@0.0.3",
  "dist": {
    "shasum": "fbc764fcf54453af49cb66161c689b753e176746",
    "tarball": "http://registry.npmjs.org/passport-facebook-canvas/-/passport-facebook-canvas-0.0.3.tgz"
  },
  "_from": "passport-facebook-canvas@*",
  "_npmVersion": "1.3.7",
  "_npmUser": {
    "name": "missinglink",
    "email": "peter@missinglink.co.nz"
  },
  "maintainers": [
    {
      "name": "missinglink",
      "email": "peter@missinglink.co.nz"
    }
  ],
  "directories": {},
  "_shasum": "fbc764fcf54453af49cb66161c689b753e176746",
  "_resolved": "https://registry.npmjs.org/passport-facebook-canvas/-/passport-facebook-canvas-0.0.3.tgz",
  "homepage": "https://github.com/missinglink/passport-facebook-canvas"
}
